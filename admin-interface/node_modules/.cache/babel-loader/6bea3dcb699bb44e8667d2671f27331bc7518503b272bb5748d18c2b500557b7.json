{"ast":null,"code":"const fetch = require('node-fetch');\nconst ApiServer = 'https://meta.fabricmc.net';\nconst LoaderUrl = `${ApiServer}/v2/versions/loader`;\nexport const getFabricLoaders = async () => {\n  const response = await fetch(LoaderUrl);\n  const loaders = await response.json();\n  return loaders;\n};\n\n// Example usage\ngetFabricLoaders().then(loaders => {\n  console.log('Fabric loaders:', loaders);\n}).catch(error => {\n  console.error('Error fetching fabric loaders:', error);\n});","map":{"version":3,"names":["fetch","require","ApiServer","LoaderUrl","getFabricLoaders","response","loaders","json","then","console","log","catch","error"],"sources":["C:/Users/crazy/Desktop/MMMServer/admin-interface/src/util/fabricApi.js"],"sourcesContent":["const fetch = require('node-fetch');\r\n\r\nconst ApiServer = 'https://meta.fabricmc.net';\r\nconst LoaderUrl = `${ApiServer}/v2/versions/loader`;\r\n\r\nexport const getFabricLoaders =  async () => {\r\n  const response = await fetch(LoaderUrl);\r\n  const loaders = await response.json();\r\n  return loaders;\r\n};\r\n\r\n\r\n// Example usage\r\ngetFabricLoaders()\r\n  .then(loaders => {\r\n    console.log('Fabric loaders:', loaders);\r\n  })\r\n  .catch(error => {\r\n    console.error('Error fetching fabric loaders:', error);\r\n  });"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,YAAY,CAAC;AAEnC,MAAMC,SAAS,GAAG,2BAA2B;AAC7C,MAAMC,SAAS,GAAI,GAAED,SAAU,qBAAoB;AAEnD,OAAO,MAAME,gBAAgB,GAAI,MAAAA,CAAA,KAAY;EAC3C,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACG,SAAS,CAAC;EACvC,MAAMG,OAAO,GAAG,MAAMD,QAAQ,CAACE,IAAI,CAAC,CAAC;EACrC,OAAOD,OAAO;AAChB,CAAC;;AAGD;AACAF,gBAAgB,CAAC,CAAC,CACfI,IAAI,CAACF,OAAO,IAAI;EACfG,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEJ,OAAO,CAAC;AACzC,CAAC,CAAC,CACDK,KAAK,CAACC,KAAK,IAAI;EACdH,OAAO,CAACG,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;AACxD,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}