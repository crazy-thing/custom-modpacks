{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crazy\\\\Desktop\\\\MMMServer\\\\admin-interface\\\\src\\\\components\\\\DropDown\\\\DropDown.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './dropdown.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DropDown = ({\n  width,\n  height,\n  fontSize,\n  options,\n  value,\n  onChange\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const handleOptionsClick = option => {\n    onchange(option);\n    setIsOpen(false);\n  };\n  const dropDownBoxStyle = {\n    width: width,\n    height: height,\n    fontSize: fontSize\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown\",\n    style: dropDownBoxStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-selected-option\",\n      onClick: () => setIsOpen(!isOpen),\n      children: [value, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `dropdown-arrow ${isOpen ? 'open' : ''}`,\n        children: \" &#9660 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-options\",\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `dropdown-options-option ${option === value ? 'selected' : ''}`,\n        onClick: () => handleOptionsClick(option),\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(DropDown, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = DropDown;\nexport default DropDown;\nvar _c;\n$RefreshReg$(_c, \"DropDown\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DropDown","width","height","fontSize","options","value","onChange","_s","isOpen","setIsOpen","handleOptionsClick","option","onchange","dropDownBoxStyle","className","style","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["C:/Users/crazy/Desktop/MMMServer/admin-interface/src/components/DropDown/DropDown.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './dropdown.css';\r\n\r\nconst DropDown = ({ width, height, fontSize, options, value, onChange}) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const handleOptionsClick = (option) => {\r\n        onchange(option);\r\n        setIsOpen(false);\r\n    };\r\n\r\n    const dropDownBoxStyle = {\r\n        width: width,\r\n        height: height,\r\n        fontSize: fontSize,\r\n    };\r\n\r\n  return (\r\n    <div className='dropdown' style={dropDownBoxStyle}>\r\n        <div className='dropdown-selected-option' onClick={() => setIsOpen(!isOpen)}>\r\n            {value}\r\n            <span className={`dropdown-arrow ${isOpen ? 'open' : ''}`}> &#9660 </span>\r\n        </div>\r\n        {isOpen && (\r\n            <div className='dropdown-options'>\r\n                {options.map((option) => (\r\n                    <div key={option}\r\n                         className={`dropdown-options-option ${option === value ? 'selected' : ''}`}\r\n                         onClick={() => handleOptionsClick(option)} >\r\n                        {option}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropDown;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,KAAK;EAAEC,MAAM;EAAEC,QAAQ;EAAEC,OAAO;EAAEC,KAAK;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACvE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMa,kBAAkB,GAAIC,MAAM,IAAK;IACnCC,QAAQ,CAACD,MAAM,CAAC;IAChBF,SAAS,CAAC,KAAK,CAAC;EACpB,CAAC;EAED,MAAMI,gBAAgB,GAAG;IACrBZ,KAAK,EAAEA,KAAK;IACZC,MAAM,EAAEA,MAAM;IACdC,QAAQ,EAAEA;EACd,CAAC;EAEH,oBACEJ,OAAA;IAAKe,SAAS,EAAC,UAAU;IAACC,KAAK,EAAEF,gBAAiB;IAAAG,QAAA,gBAC9CjB,OAAA;MAAKe,SAAS,EAAC,0BAA0B;MAACG,OAAO,EAAEA,CAAA,KAAMR,SAAS,CAAC,CAACD,MAAM,CAAE;MAAAQ,QAAA,GACvEX,KAAK,eACNN,OAAA;QAAMe,SAAS,EAAG,kBAAiBN,MAAM,GAAG,MAAM,GAAG,EAAG,EAAE;QAAAQ,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE,CAAC,EACLb,MAAM,iBACHT,OAAA;MAAKe,SAAS,EAAC,kBAAkB;MAAAE,QAAA,EAC5BZ,OAAO,CAACkB,GAAG,CAAEX,MAAM,iBAChBZ,OAAA;QACKe,SAAS,EAAG,2BAA0BH,MAAM,KAAKN,KAAK,GAAG,UAAU,GAAG,EAAG,EAAE;QAC3EY,OAAO,EAAEA,CAAA,KAAMP,kBAAkB,CAACC,MAAM,CAAE;QAAAK,QAAA,EAC1CL;MAAM,GAHDA,MAAM;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIX,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEV,CAAC;AAACd,EAAA,CAjCIP,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AAmCd,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}