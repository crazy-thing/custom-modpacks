{"ast":null,"code":"const createFormData = modpack => {\n  const formData = new FormData();\n  formData.append('name', modpack.name);\n  formData.append('version', modpack.version);\n  formData.append('description', modpack.description);\n  formData.append('thumbnail', modpack.thumbnail);\n  if (modpack.versions.length === 0) {\n    formData.append('versions', '{[]}');\n  } else {\n    modpack.versions.forEach((version, index) => {\n      formData.append(`versions[${index}][name]`, version.name);\n      formData.append(`versions[${index}][id]`, version.id);\n      formData.append(`versions[${index}][zip]`, version.zip);\n      formData.append(`versions[${index}][zipFile]`, version.zipFile);\n      formData.append(`versions[${index}][size]`, version.size);\n      formData.append(`versions[${index}][mcVersion]`, version.mcVersion);\n      formData.append(`versions[${index}][modLoader]`, version.modLoader);\n      formData.append(`versions[${index}][modName]`, version.modName);\n    });\n  }\n  return formData;\n};\nexport const uploadModpack = async (modpack, baseUrl) => {\n  try {\n    const formData = createFormData(modpack);\n    const res = await fetch(baseUrl, {\n      method: 'POST',\n      body: formData\n    });\n    if (!res.ok) {\n      throw new Error('Failed to upload file');\n    }\n    return res.json();\n  } catch (error) {\n    console.error('Error uploading file: ', error);\n    throw error;\n  }\n};\nexport const editModpack = async (modpack, baseUrl) => {\n  try {\n    const formData = createFormData(modpack);\n    const res = await fetch(`${baseUrl}/${modpack.id}`, {\n      method: 'PUT',\n      body: formData\n    });\n    if (!res.ok) {\n      throw new Error('Failed updating file');\n    }\n    return res.json();\n  } catch (error) {\n    console.error('Error updating file: ', error);\n    throw error;\n  }\n};\nexport const getAllModpacks = async baseUrl => {\n  try {\n    const res = await fetch(baseUrl, {\n      method: 'GET'\n    });\n    if (!res.ok) {\n      throw new Error('Failed to fetch modpacks');\n    }\n    return res.json();\n  } catch (error) {\n    console.error('Error fetching modpacks: ', error);\n    throw error;\n  }\n};\nexport const deleteModpack = async (modpack, baseUrl) => {\n  try {\n    const res = await fetch(`${baseUrl}/${modpack.id}`, {\n      method: 'DELETE'\n    });\n    if (!res.ok) {\n      throw new Error(`Failed to delete modpack with ID: ${modpack.id}`);\n    }\n    return res.json();\n  } catch (error) {\n    console.error('Error deleting modpack: ', error);\n    throw error;\n  }\n};\nexport const deleteVersion = async (modpackId, versionId, baseUrl) => {\n  try {\n    const res = await fetch(`${baseUrl}/${modpackId}/versions/${versionId}`, {\n      method: 'DELETE'\n    });\n    if (!res.ok) {\n      throw new Error(`Failed to delete version with ID: ${versionId}`);\n    }\n    return res.json();\n  } catch (error) {\n    console.error('Error deleting version: ', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["createFormData","modpack","formData","FormData","append","name","version","description","thumbnail","versions","length","forEach","index","id","zip","zipFile","size","mcVersion","modLoader","modName","uploadModpack","baseUrl","res","fetch","method","body","ok","Error","json","error","console","editModpack","getAllModpacks","deleteModpack","deleteVersion","modpackId","versionId"],"sources":["C:/Users/crazy/Documents/custom-modpacks/admin-interface/src/util/api.js"],"sourcesContent":["const createFormData = (modpack) => {\r\n    const formData = new FormData();\r\n\r\n    formData.append('name', modpack.name);\r\n    formData.append('version', modpack.version);\r\n    formData.append('description', modpack.description);\r\n    formData.append('thumbnail', modpack.thumbnail); \r\n\r\n    if (modpack.versions.length === 0) {\r\n        formData.append('versions', '{[]}'); \r\n    } else {\r\n        modpack.versions.forEach((version, index) => {\r\n            formData.append(`versions[${index}][name]`, version.name);\r\n            formData.append(`versions[${index}][id]`, version.id);\r\n            formData.append(`versions[${index}][zip]`, version.zip); \r\n            formData.append(`versions[${index}][zipFile]`, version.zipFile);\r\n            formData.append(`versions[${index}][size]`, version.size);\r\n            formData.append(`versions[${index}][mcVersion]`, version.mcVersion);\r\n            formData.append(`versions[${index}][modLoader]`, version.modLoader);\r\n            formData.append(`versions[${index}][modName]`, version.modName);\r\n        });\r\n    }\r\n\r\n    return formData;\r\n};\r\nexport const uploadModpack = async (modpack, baseUrl) => {\r\n    try {\r\n        const formData = createFormData(modpack);\r\n\r\n        const res = await fetch(baseUrl, {\r\n            method: 'POST',\r\n            body: formData,\r\n        });\r\n\r\n        if (!res.ok) {\r\n            throw new Error('Failed to upload file');\r\n        }\r\n\r\n        return res.json();\r\n    } catch (error) {\r\n        console.error('Error uploading file: ', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const editModpack = async (modpack, baseUrl) => {\r\n    try {\r\n        const formData = createFormData(modpack);\r\n\r\n        const res = await fetch(`${baseUrl}/${modpack.id}`, {\r\n            method: 'PUT',\r\n            body: formData,\r\n        });\r\n\r\n        if (!res.ok) {\r\n            throw new Error('Failed updating file');\r\n        }\r\n\r\n        return res.json();\r\n    } catch (error) {\r\n        console.error('Error updating file: ', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const getAllModpacks = async (baseUrl) => {\r\n    try {\r\n        const res = await fetch(baseUrl, {\r\n            method: 'GET',\r\n        });\r\n\r\n        if (!res.ok) {\r\n            throw new Error('Failed to fetch modpacks');\r\n        }\r\n\r\n        return res.json();\r\n    } catch (error) {\r\n        console.error('Error fetching modpacks: ', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const deleteModpack = async (modpack, baseUrl) => {\r\n    try {\r\n        const res = await fetch(`${baseUrl}/${modpack.id}`, {\r\n            method: 'DELETE',\r\n        });\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Failed to delete modpack with ID: ${modpack.id}`);\r\n        }\r\n\r\n        return res.json();\r\n    } catch (error) {\r\n        console.error('Error deleting modpack: ', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const deleteVersion = async (modpackId, versionId, baseUrl) => {\r\n    try {\r\n        const res = await fetch(`${baseUrl}/${modpackId}/versions/${versionId}`, {\r\n            method: 'DELETE',\r\n        });\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Failed to delete version with ID: ${versionId}`);\r\n        }\r\n\r\n        return res.json();\r\n    } catch (error) {\r\n        console.error('Error deleting version: ', error);\r\n        throw error;\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}