{"ast":null,"code":"const fs = require('fs');\nexport const readConfig = () => {\n  try {\n    const data = fs.readFileSync('../../../api-server/config.json', 'utf8');\n    const config = JSON.parse(data);\n    return config;\n  } catch (error) {\n    if (error.code === 'ENOENT') {\n      console.error(`Config file not found.`);\n    } else {\n      console.error('Error reading config file: ', error);\n    }\n    return null;\n  }\n};","map":{"version":3,"names":["fs","require","readConfig","data","readFileSync","config","JSON","parse","error","code","console"],"sources":["C:/Users/crazy/Desktop/Feb21/custom-modpacks/admin-interface/src/util/config.js"],"sourcesContent":["const fs = require('fs');\r\n\r\nexport const readConfig = () => {\r\n    try {\r\n        const data = fs.readFileSync('../../../api-server/config.json', 'utf8');\r\n\r\n        const config = JSON.parse(data);\r\n        return config;\r\n    } catch (error) {\r\n        if (error.code === 'ENOENT') {\r\n            console.error(`Config file not found.`);\r\n        } else {\r\n            console.error('Error reading config file: ', error);\r\n        }\r\n        return null;\r\n    }\r\n};\r\n"],"mappings":"AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AAExB,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAC5B,IAAI;IACA,MAAMC,IAAI,GAAGH,EAAE,CAACI,YAAY,CAAC,iCAAiC,EAAE,MAAM,CAAC;IAEvE,MAAMC,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC;IAC/B,OAAOE,MAAM;EACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZ,IAAIA,KAAK,CAACC,IAAI,KAAK,QAAQ,EAAE;MACzBC,OAAO,CAACF,KAAK,CAAE,wBAAuB,CAAC;IAC3C,CAAC,MAAM;MACHE,OAAO,CAACF,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACvD;IACA,OAAO,IAAI;EACf;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}