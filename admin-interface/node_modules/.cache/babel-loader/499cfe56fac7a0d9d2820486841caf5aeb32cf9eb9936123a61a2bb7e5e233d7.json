{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crazy\\\\Desktop\\\\MMMServer2-14-24\\\\admin-interface\\\\src\\\\components\\\\FileUpload\\\\FileUpload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport cloudIcon from '../../assets/cloud.png';\nimport './FileUpload.css';\nimport UploadedFile from '../UploadedFile/UploadedFile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FileUpload = ({\n  onChange,\n  modpack\n}) => {\n  _s();\n  const [isDragging, setIsDragging] = useState(false);\n  const [uploadedModpack, setUploadedModpack] = useState({\n    name: '',\n    version: '',\n    mcVersion: '',\n    fabricVersion: '',\n    description: '',\n    thumbnail: '',\n    modpack: '',\n    size: ''\n  });\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const fileInputRef = useRef(null);\n  const handleDragEnter = () => {\n    setIsDragging(true);\n  };\n  const handleDragLeave = () => {\n    setIsDragging(false);\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const handleModpack = modpack => {\n    if (!modpack.name.toLowerCase().endsWith('.zip')) {\n      console.error('Invalid file type. Please upload a ZIP file.');\n      return;\n    }\n    setUploadedModpack({\n      modpack: modpack.name,\n      size: modpack.size\n    });\n    onChange('modpack', modpack);\n    onChange('size', modpack.size);\n    const reader = new FileReader();\n    reader.onprogress = event => {\n      if (event.lengthComputable) {\n        const progress = event.loaded / event.total * 100;\n        setUploadProgress(progress);\n      }\n    };\n    reader.onloadend = () => {\n      console.log('Reading finished');\n    };\n    reader.readAsDataURL(modpack);\n  };\n  const handleDrop = event => {\n    event.preventDefault();\n    setIsDragging(false);\n    const files = event.dataTransfer.files;\n    handleModpack(files[0]);\n  };\n  const handleFileInputChange = event => {\n    const files = event.target.files;\n    handleModpack(files[0]);\n  };\n  const handleClick = () => {\n    fileInputRef.current.click();\n  };\n  const removeModpack = () => {\n    setUploadProgress(0);\n    setUploadedModpack({\n      name: '',\n      version: '',\n      mcVersion: '',\n      fabricVersion: '',\n      description: '',\n      thumbnail: '',\n      modpack: '',\n      size: ''\n    });\n    onChange('modpack', '');\n    onChange('size', '');\n  };\n  useEffect(() => {\n    if (modpack) {\n      setUploadedModpack(modpack);\n      setUploadProgress(100);\n    }\n  }, [modpack]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: uploadProgress > 0 ? /*#__PURE__*/_jsxDEV(UploadedFile, {\n      uploadedModpack: uploadedModpack,\n      removeModpack: removeModpack,\n      progress: uploadProgress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `file-upload ${isDragging ? 'dragging' : ''}`,\n      onDragEnter: handleDragEnter,\n      onDragLeave: handleDragLeave,\n      onDragOver: handleDragOver,\n      onDrop: handleDrop,\n      onClick: handleClick,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-upload-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: cloudIcon,\n          alt: \"Cloud upload icon\",\n          width: 24,\n          height: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"file-upload-content-text\",\n          children: \"Drop files here or click to upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".zip\",\n        ref: fileInputRef,\n        style: {\n          display: 'none'\n        },\n        onChange: handleFileInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n_s(FileUpload, \"l6a9cqqiQU2nzy42+cb0qiRHHlU=\");\n_c = FileUpload;\nFileUpload.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  modpack: PropTypes.object\n};\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","useRef","useEffect","PropTypes","cloudIcon","UploadedFile","jsxDEV","_jsxDEV","Fragment","_Fragment","FileUpload","onChange","modpack","_s","isDragging","setIsDragging","uploadedModpack","setUploadedModpack","name","version","mcVersion","fabricVersion","description","thumbnail","size","uploadProgress","setUploadProgress","fileInputRef","handleDragEnter","handleDragLeave","handleDragOver","e","preventDefault","handleModpack","toLowerCase","endsWith","console","error","reader","FileReader","onprogress","event","lengthComputable","progress","loaded","total","onloadend","log","readAsDataURL","handleDrop","files","dataTransfer","handleFileInputChange","target","handleClick","current","click","removeModpack","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onDragEnter","onDragLeave","onDragOver","onDrop","onClick","src","alt","width","height","type","accept","ref","style","display","_c","propTypes","func","isRequired","object","$RefreshReg$"],"sources":["C:/Users/crazy/Desktop/MMMServer2-14-24/admin-interface/src/components/FileUpload/FileUpload.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cloudIcon from '../../assets/cloud.png';\r\nimport './FileUpload.css';\r\nimport UploadedFile from '../UploadedFile/UploadedFile';\r\n\r\nconst FileUpload = ({ onChange, modpack }) => {\r\n    const [isDragging, setIsDragging] = useState(false);\r\n    const [uploadedModpack, setUploadedModpack] = useState({\r\n        name: '',\r\n        version: '',\r\n        mcVersion: '',\r\n        fabricVersion: '',\r\n        description: '',\r\n        thumbnail: '',\r\n        modpack: '',\r\n        size: '',\r\n    });\r\n    const [uploadProgress, setUploadProgress] = useState(0);\r\n    const fileInputRef = useRef(null);\r\n\r\n    const handleDragEnter = () => {\r\n        setIsDragging(true);\r\n    };\r\n\r\n    const handleDragLeave = () => {\r\n        setIsDragging(false);\r\n    };\r\n\r\n    const handleDragOver = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    const handleModpack = (modpack) => {\r\n        if (!modpack.name.toLowerCase().endsWith('.zip')) {\r\n            console.error('Invalid file type. Please upload a ZIP file.');\r\n            return;\r\n        }\r\n        setUploadedModpack({\r\n            modpack: modpack.name,\r\n            size: modpack.size,\r\n        });\r\n        onChange('modpack', modpack);\r\n        onChange('size', modpack.size);\r\n        const reader = new FileReader();\r\n        reader.onprogress = (event) => {\r\n            if (event.lengthComputable) {\r\n                const progress = (event.loaded / event.total) * 100;\r\n                setUploadProgress(progress);\r\n            }\r\n        };\r\n        reader.onloadend = () => {\r\n            console.log('Reading finished');\r\n        };\r\n        reader.readAsDataURL(modpack);\r\n    };\r\n\r\n    const handleDrop = (event) => {\r\n        event.preventDefault();\r\n        setIsDragging(false);\r\n        const files = event.dataTransfer.files;\r\n        handleModpack(files[0]);\r\n    };\r\n\r\n    const handleFileInputChange = (event) => {\r\n        const files = event.target.files;\r\n        handleModpack(files[0]);\r\n    };\r\n\r\n    const handleClick = () => {\r\n        fileInputRef.current.click();\r\n    };\r\n\r\n    const removeModpack = () => {\r\n        setUploadProgress(0);\r\n        setUploadedModpack({\r\n            name: '',\r\n            version: '',\r\n            mcVersion: '',\r\n            fabricVersion: '',\r\n            description: '',\r\n            thumbnail: '',\r\n            modpack: '',\r\n            size: '',\r\n        });\r\n        onChange('modpack', '');\r\n        onChange('size', '');\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (modpack) {\r\n            setUploadedModpack(modpack);\r\n            setUploadProgress(100);\r\n        }\r\n    }, [modpack]);\r\n\r\n    return (\r\n        <>\r\n            {uploadProgress > 0 ? (\r\n                <UploadedFile uploadedModpack={uploadedModpack} removeModpack={removeModpack} progress={uploadProgress} />\r\n            ) : (\r\n                <div\r\n                    className={`file-upload ${isDragging ? 'dragging' : ''}`}\r\n                    onDragEnter={handleDragEnter}\r\n                    onDragLeave={handleDragLeave}\r\n                    onDragOver={handleDragOver}\r\n                    onDrop={handleDrop}\r\n                    onClick={handleClick}\r\n                >\r\n                    <div className='file-upload-content'>\r\n                        <img src={cloudIcon} alt='Cloud upload icon' width={24} height={24} />\r\n                        <p className='file-upload-content-text'>Drop files here or click to upload</p>\r\n                    </div>\r\n                    <input\r\n                        type='file'\r\n                        accept='.zip'\r\n                        ref={fileInputRef}\r\n                        style={{ display: 'none' }}\r\n                        onChange={handleFileInputChange}\r\n                    />\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nFileUpload.propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n    modpack: PropTypes.object,\r\n};\r\n\r\nexport default FileUpload;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}