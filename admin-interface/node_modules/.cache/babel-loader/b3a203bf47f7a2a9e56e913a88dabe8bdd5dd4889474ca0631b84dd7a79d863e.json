{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import'./dropdown.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const DropDown=_ref=>{let{width='auto',height='auto',fontSize='inherit',options=[],value,onChange}=_ref;const[isOpen,setIsOpen]=useState(false);const dropDownRef=useRef(null);const handleOptionsClick=option=>{onChange(option);setIsOpen(false);};const dropDownBoxStyle={width,height,fontSize};const handleClickOutside=event=>{if(dropDownRef.current&&!dropDownRef.current.contains(event.target)){setIsOpen(false);}};useEffect(()=>{document.addEventListener('click',handleClickOutside);return()=>{document.removeEventListener('click',handleClickOutside);};},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"dropdown \".concat(isOpen?'open':''),style:dropDownBoxStyle,ref:dropDownRef,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"dropdown-selected-option\",onClick:()=>setIsOpen(!isOpen),children:[value||'Select a version',/*#__PURE__*/_jsx(\"span\",{className:\"dropdown-arrow \".concat(isOpen?'open':''),children:\" \\u25BC \"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"dropdown-options \".concat(isOpen?'open':''),children:options.map(option=>/*#__PURE__*/_jsx(\"div\",{className:\"dropdown-options-option \".concat(option===value?'selected':''),onClick:()=>handleOptionsClick(option),children:option},option))})]});};export default DropDown;","map":{"version":3,"names":["React","useEffect","useRef","useState","jsx","_jsx","jsxs","_jsxs","DropDown","_ref","width","height","fontSize","options","value","onChange","isOpen","setIsOpen","dropDownRef","handleOptionsClick","option","dropDownBoxStyle","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","className","concat","style","ref","children","onClick","map"],"sources":["C:/Users/crazy/Desktop/Feb21/custom-modpacks/admin-interface/src/components/DropDown/DropDown.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport './dropdown.css';\r\n\r\nconst DropDown = ({ width = 'auto', height = 'auto', fontSize = 'inherit', options = [], value, onChange }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const dropDownRef = useRef(null);\r\n\r\n    const handleOptionsClick = (option) => {\r\n        onChange(option);\r\n        setIsOpen(false);\r\n    };\r\n\r\n    const dropDownBoxStyle = {\r\n        width,\r\n        height,\r\n        fontSize,\r\n    };\r\n\r\n    const handleClickOutside = (event) => {\r\n        if (dropDownRef.current && !dropDownRef.current.contains(event.target)) {\r\n            setIsOpen(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('click', handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener('click', handleClickOutside);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className={`dropdown ${isOpen ? 'open' : ''}`} style={dropDownBoxStyle} ref={dropDownRef}>\r\n            <div className='dropdown-selected-option' onClick={() => setIsOpen(!isOpen)}>\r\n                {value || 'Select a version'}\r\n                <span className={`dropdown-arrow ${isOpen ? 'open' : ''}`}> &#9660; </span>\r\n            </div>\r\n            <div className={`dropdown-options ${isOpen ? 'open' : ''}`}>\r\n                {options.map((option) => (\r\n                    <div\r\n                        key={option}\r\n                        className={`dropdown-options-option ${option === value ? 'selected' : ''}`}\r\n                        onClick={() => handleOptionsClick(option)}\r\n                    >\r\n                        {option}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DropDown;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,CAAEC,QAAQ,KAAQ,OAAO,CAC1D,MAAO,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAExB,KAAM,CAAAC,QAAQ,CAAGC,IAAA,EAA8F,IAA7F,CAAEC,KAAK,CAAG,MAAM,CAAEC,MAAM,CAAG,MAAM,CAAEC,QAAQ,CAAG,SAAS,CAAEC,OAAO,CAAG,EAAE,CAAEC,KAAK,CAAEC,QAAS,CAAC,CAAAN,IAAA,CACtG,KAAM,CAACO,MAAM,CAAEC,SAAS,CAAC,CAAGd,QAAQ,CAAC,KAAK,CAAC,CAC3C,KAAM,CAAAe,WAAW,CAAGhB,MAAM,CAAC,IAAI,CAAC,CAEhC,KAAM,CAAAiB,kBAAkB,CAAIC,MAAM,EAAK,CACnCL,QAAQ,CAACK,MAAM,CAAC,CAChBH,SAAS,CAAC,KAAK,CAAC,CACpB,CAAC,CAED,KAAM,CAAAI,gBAAgB,CAAG,CACrBX,KAAK,CACLC,MAAM,CACNC,QACJ,CAAC,CAED,KAAM,CAAAU,kBAAkB,CAAIC,KAAK,EAAK,CAClC,GAAIL,WAAW,CAACM,OAAO,EAAI,CAACN,WAAW,CAACM,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,CAAE,CACpET,SAAS,CAAC,KAAK,CAAC,CACpB,CACJ,CAAC,CAEDhB,SAAS,CAAC,IAAM,CACZ0B,QAAQ,CAACC,gBAAgB,CAAC,OAAO,CAAEN,kBAAkB,CAAC,CACtD,MAAO,IAAM,CACTK,QAAQ,CAACE,mBAAmB,CAAC,OAAO,CAAEP,kBAAkB,CAAC,CAC7D,CAAC,CACL,CAAC,CAAE,EAAE,CAAC,CAEN,mBACIf,KAAA,QAAKuB,SAAS,aAAAC,MAAA,CAAcf,MAAM,CAAG,MAAM,CAAG,EAAE,CAAG,CAACgB,KAAK,CAAEX,gBAAiB,CAACY,GAAG,CAAEf,WAAY,CAAAgB,QAAA,eAC1F3B,KAAA,QAAKuB,SAAS,CAAC,0BAA0B,CAACK,OAAO,CAAEA,CAAA,GAAMlB,SAAS,CAAC,CAACD,MAAM,CAAE,CAAAkB,QAAA,EACvEpB,KAAK,EAAI,kBAAkB,cAC5BT,IAAA,SAAMyB,SAAS,mBAAAC,MAAA,CAAoBf,MAAM,CAAG,MAAM,CAAG,EAAE,CAAG,CAAAkB,QAAA,CAAC,UAAS,CAAM,CAAC,EAC1E,CAAC,cACN7B,IAAA,QAAKyB,SAAS,qBAAAC,MAAA,CAAsBf,MAAM,CAAG,MAAM,CAAG,EAAE,CAAG,CAAAkB,QAAA,CACtDrB,OAAO,CAACuB,GAAG,CAAEhB,MAAM,eAChBf,IAAA,QAEIyB,SAAS,4BAAAC,MAAA,CAA6BX,MAAM,GAAKN,KAAK,CAAG,UAAU,CAAG,EAAE,CAAG,CAC3EqB,OAAO,CAAEA,CAAA,GAAMhB,kBAAkB,CAACC,MAAM,CAAE,CAAAc,QAAA,CAEzCd,MAAM,EAJFA,MAKJ,CACR,CAAC,CACD,CAAC,EACL,CAAC,CAEd,CAAC,CAED,cAAe,CAAAZ,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}